<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Inject script directly into POS index template -->
    <template id="pos_script_injection" inherit_id="point_of_sale.index" priority="100">
        <xpath expr="//head" position="inside">
            <script type="text/javascript">
                <![CDATA[
                console.log('ðŸ”¥ðŸ”¥ðŸ”¥ POS SCRIPT LOADED VIA INDEX TEMPLATE ðŸ”¥ðŸ”¥ðŸ”¥');
                
                function waitForPOS() {
                    console.log('ðŸ”¥ Waiting for POS to be ready...');
                    
                    function injectButton() {
                        console.log('ðŸ”¥ Attempting button injection...');
                        
                        if (document.querySelector('.temp-product-btn')) {
                            console.log('ðŸ”¥ Button already exists');
                            return true;
                        }
                        
                        // Create button
                        var button = document.createElement('button');
                        button.className = 'temp-product-btn';
                        button.innerHTML = '+ Producto Temporal';
                        button.style.cssText = 'position: fixed; top: 10px; right: 10px; z-index: 99999; background: #28a745; color: white; padding: 12px 16px; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; box-shadow: 0 4px 12px rgba(0,0,0,0.3); font-size: 14px;';
                        
                        button.onclick = function() {
                            console.log('ðŸ”¥ BUTTON CLICKED!');
                            showTempProductPopup();
                        };
                        
                        document.body.appendChild(button);
                        console.log('ðŸ”¥ðŸ”¥ðŸ”¥ BUTTON INJECTED SUCCESSFULLY! ðŸ”¥ðŸ”¥ðŸ”¥');
                        return true;
                    }
                    
                    function showTempProductPopup() {
                        console.log('ðŸ”¥ Showing popup...');
                        
                        // Simple prompts for now - easier and no XML conflicts
                        var name = prompt('Nombre del producto:');
                        if (!name || name.trim() === '') {
                            console.log('ðŸ”¥ No name provided');
                            return;
                        }
                        
                        var qty = prompt('Cantidad:', '1');
                        qty = parseFloat(qty);
                        if (isNaN(qty) || qty <= 0) {
                            alert('La cantidad debe ser un nÃºmero mayor a 0');
                            return;
                        }
                        
                        var price = prompt('Precio:', '0');
                        price = parseFloat(price);
                        if (isNaN(price) || price < 0) {
                            alert('El precio debe ser un nÃºmero mayor o igual a 0');
                            return;
                        }
                        
                        console.log('ðŸ”¥ Adding temp product:', {name: name.trim(), qty: qty, price: price});
                        alert('Producto temporal agregado:\n\nNombre: ' + name.trim() + '\nCantidad: ' + qty + '\nPrecio: $' + price + '\n\nÂ¡PrÃ³ximo paso: integrar con el carrito del POS!');
                    }
                    
                    // Multiple injection attempts
                    var attempts = 0;
                    var maxAttempts = 30;
                    
                    function tryInject() {
                        attempts++;
                        console.log('ðŸ”¥ Injection attempt', attempts, 'of', maxAttempts);
                        
                        if (injectButton()) {
                            console.log('ðŸ”¥ Injection successful!');
                            return;
                        }
                        
                        if (attempts < maxAttempts) {
                            setTimeout(tryInject, 1000);
                        } else {
                            console.log('ðŸ”¥ Max injection attempts reached');
                        }
                    }
                    
                    // Start injection attempts
                    setTimeout(tryInject, 1000);
                }
                
                // Start when DOM is ready
                if (document.readyState === 'loading') {
                    document.addEventListener('DOMContentLoaded', waitForPOS);
                } else {
                    waitForPOS();
                }
                
                console.log('ðŸ”¥ðŸ”¥ðŸ”¥ POS SCRIPT SETUP COMPLETE ðŸ”¥ðŸ”¥ðŸ”¥');
                ]]>
            </script>
        </xpath>
    </template>
</odoo>